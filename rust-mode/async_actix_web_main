# -*- mode: snippet -*-
# name: async fn main() { actix_web... }
# key: async_actix_web_main
# --
#[actix_web::main]
use actix_web::{App, HttpServer, web};
async fn main() -> color_eyre::eyre::Result<()> {
	color_eyre::install()?;
	tracing_subscriber::fmt::init();

	let args = Args::parse();
	tracing::trace!("Args: {args:?}");

	let state = AppState {
		db_iri: args.db_iri.to_string(),
	};

	HttpServer::new(move || {
		App::new()
			.wrap(actix_web::middleware::Logger::default())
			.app_data(web::Data::new(state.clone()))
			.service($0)
	})
	.bind(args.listen_address)?
	.run()
	.await?;


	Ok(())
}